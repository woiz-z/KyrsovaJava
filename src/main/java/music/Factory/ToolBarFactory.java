package music.Factory;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import javax.swing.*;
import java.awt.*;

/**
 * –§–∞–±—Ä–∏—á–Ω–∏–π –∫–ª–∞—Å –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø–∞–Ω–µ–ª—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ —ñ–∑ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –º—É–∑–∏—á–Ω–∏–º–∏ –∑–±—ñ—Ä–∫–∞–º–∏.
 * –ù–∞–¥–∞—î –º–µ—Ç–æ–¥–∏ –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω–æ—ó –ø–∞–Ω–µ–ª—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ —ñ–∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –¥—ñ–π –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è,
 * –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è, –¥–æ–¥–∞–≤–∞–Ω–Ω—è, –ø–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–Ω–Ω—è —Ç–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–±—ñ—Ä–æ–∫.
 */
public class ToolBarFactory {
    private static final Logger LOGGER = LogManager.getLogger(ToolBarFactory.class);
    private static final Color PANEL_COLOR = new Color(255, 255, 255);
    private static final Color ACCENT_COLOR = new Color(70, 130, 180);
    private static final Font MAIN_FONT = new Font("Segoe UI", Font.PLAIN, 14);
    private static final int BORDER_RADIUS = 10;
    private static final Dimension SEPARATOR_SIZE = new Dimension(10, 0);

    /**
     * –°—Ç–≤–æ—Ä—é—î –ø–∞–Ω–µ–ª—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ —ñ–∑ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–∞–¥–∞–Ω–∏—Ö –¥—ñ–π.
     *
     * @param loadAction   –¥—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —ñ–∑ —Ñ–∞–π–ª—É
     * @param saveAction   –¥—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö —É —Ñ–∞–π–ª
     * @param addAction    –¥—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó –∑–±—ñ—Ä–∫–∏
     * @param renameAction –¥—ñ—è –¥–ª—è –ø–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–Ω–Ω—è –∑–±—ñ—Ä–∫–∏
     * @param deleteAction –¥—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –∑–±—ñ—Ä–∫–∏
     * @return —Å—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω–∞ –ø–∞–Ω–µ–ª—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ —Ç–∏–ø—É JToolBar
     * @throws RuntimeException —è–∫—â–æ –≤–∏–Ω–∏–∫–∞—î –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –ø–∞–Ω–µ–ª—ñ
     */
    public static JToolBar createToolBar(Runnable loadAction, Runnable saveAction,
                                         Runnable addAction, Runnable renameAction,
                                         Runnable deleteAction) {
            JToolBar toolBar = new JToolBar();
            configureToolBar(toolBar);
            addButtons(toolBar, loadAction, saveAction, addAction, renameAction, deleteAction);
            return toolBar;
    }

    /**
     * –ù–∞–ª–∞—à—Ç–æ–≤—É—î –æ—Å–Ω–æ–≤–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–∞–Ω–µ–ª—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤.
     *
     * @param toolBar –ø–∞–Ω–µ–ª—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
     */
    static void configureToolBar(JToolBar toolBar) {
        toolBar.setFloatable(false);
        toolBar.setBackground(PANEL_COLOR);
        toolBar.setBorder(BorderFactory.createCompoundBorder(
                BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(200, 200, 200)),
                BorderFactory.createEmptyBorder(5, 10, 5, 10)));
    }

    /**
     * –î–æ–¥–∞—î –∫–Ω–æ–ø–∫–∏ –¥–æ –ø–∞–Ω–µ–ª—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ —ñ–∑ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º–∏ –¥—ñ—è–º–∏.
     *
     * @param toolBar      –ø–∞–Ω–µ–ª—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
     * @param loadAction   –¥—ñ—è –¥–ª—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
     * @param saveAction   –¥—ñ—è –¥–ª—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è
     * @param addAction    –¥—ñ—è –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
     * @param renameAction –¥—ñ—è –¥–ª—è –ø–µ—Ä–µ–π–º–µ–Ω—É–≤–∞–Ω–Ω—è
     * @param deleteAction –¥—ñ—è –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è
     */
    static void addButtons(JToolBar toolBar, Runnable loadAction, Runnable saveAction,
                           Runnable addAction, Runnable renameAction, Runnable deleteAction) {
        addToolbarButton(toolBar, "–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –∑ —Ñ–∞–π–ª—É", "üìÇ", loadAction);
        toolBar.addSeparator(SEPARATOR_SIZE);
        addToolbarButton(toolBar, "–ó–±–µ—Ä–µ–≥—Ç–∏ —É —Ñ–∞–π–ª", "üíæ", saveAction);
        toolBar.addSeparator(SEPARATOR_SIZE);
        addToolbarButton(toolBar, "–î–æ–¥–∞—Ç–∏ –∑–±—ñ—Ä–∫—É", "‚ûï", addAction);
        toolBar.addSeparator(SEPARATOR_SIZE);
        addToolbarButton(toolBar, "–ó–º—ñ–Ω–∏—Ç–∏ –Ω–∞–∑–≤—É", "‚úèÔ∏è", renameAction);
        toolBar.addSeparator(SEPARATOR_SIZE);
        addToolbarButton(toolBar, "–í–∏–¥–∞–ª–∏—Ç–∏ –∑–±—ñ—Ä–∫—É", "üóëÔ∏è", deleteAction);
    }

    /**
     * –î–æ–¥–∞—î —Å—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω—É –∫–Ω–æ–ø–∫—É –¥–æ –ø–∞–Ω–µ–ª—ñ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤.
     *
     * @param toolBar –ø–∞–Ω–µ–ª—å —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
     * @param text    —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
     * @param icon    —ñ–∫–æ–Ω–∫–∞ –∫–Ω–æ–ø–∫–∏ (Unicode emoji)
     * @param action  –¥—ñ—è, —â–æ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏
     * @throws RuntimeException —è–∫—â–æ –≤–∏–Ω–∏–∫–∞—î –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –∫–Ω–æ–ø–∫–∏
     */
    static void addToolbarButton(JToolBar toolBar, String text, String icon, Runnable action) {
            JButton button = createStyledButton(text, icon, action);
            toolBar.add(button);
    }

    /**
     * –°—Ç–≤–æ—Ä—é—î —Å—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω—É –∫–Ω–æ–ø–∫—É –∑ –∫–∞—Å—Ç–æ–º–Ω–∏–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º.
     *
     * @param text   —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
     * @param icon   —ñ–∫–æ–Ω–∫–∞ –∫–Ω–æ–ø–∫–∏
     * @param action –¥—ñ—è –∫–Ω–æ–ø–∫–∏
     * @return —Å—Ç–∏–ª—ñ–∑–æ–≤–∞–Ω–∞ –∫–Ω–æ–ø–∫–∞ —Ç–∏–ø—É JButton
     */
    static JButton createStyledButton(String text, String icon, Runnable action) {
        JButton button = new JButton(String.format("%s %s", icon, text)) {
            @Override
            protected void paintComponent(Graphics g) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                Color backgroundColor = getModel().isPressed() ? ACCENT_COLOR.darker() :
                        getModel().isRollover() ? ACCENT_COLOR.brighter() : ACCENT_COLOR;

                g2.setColor(backgroundColor);
                g2.fillRoundRect(0, 0, getWidth(), getHeight(), BORDER_RADIUS, BORDER_RADIUS);
                super.paintComponent(g2);
                g2.dispose();
            }

            @Override
            protected void paintBorder(Graphics g) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
                g2.setColor(ACCENT_COLOR.darker());
                g2.drawRoundRect(0, 0, getWidth() - 1, getHeight() - 1, BORDER_RADIUS, BORDER_RADIUS);
                g2.dispose();
            }
        };

        configureButton(button, action);
        return button;
    }

    /**
     * –ù–∞–ª–∞—à—Ç–æ–≤—É—î –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ –∫–Ω–æ–ø–∫–∏.
     *
     * @param button –∫–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
     * @param action –¥—ñ—è, —â–æ –≤–∏–∫–æ–Ω—É—î—Ç—å—Å—è –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ
     */
    static void configureButton(JButton button, Runnable action) {
        button.setContentAreaFilled(false);
        button.setFont(MAIN_FONT);
        button.setForeground(Color.WHITE);
        button.setFocusPainted(false);
        button.setBorder(BorderFactory.createEmptyBorder(5, 15, 5, 15));
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));
        button.addActionListener(e -> {
            try {
                action.run();
            } catch (Exception ex) {
                LOGGER.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –¥—ñ—ó –∫–Ω–æ–ø–∫–∏: {}", ex.getMessage(), ex);
                throw new RuntimeException("–ü–æ–º–∏–ª–∫–∞ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –¥—ñ—ó –∫–Ω–æ–ø–∫–∏", ex);
            }
        });
    }
}